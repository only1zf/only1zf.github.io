"use strict";(self.webpackChunkpub=self.webpackChunkpub||[]).push([[9540],{7100:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"scrcpy","title":"scrcpy","description":"scrcpy","source":"@site/docs/scrcpy.md","sourceDirName":".","slug":"/scrcpy","permalink":"/docs/scrcpy","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"scrcpy","updated":"2021-01-11T10:30:49.000Z","created":"2021-01-19T01:48:47.000Z"},"sidebar":"tutorialSidebar","previous":{"title":"Structure of the Python Repository","permalink":"/docs/py-struct"},"next":{"title":"SSH config","permalink":"/docs/ssh"}}');var c=r(4848),s=r(8453);const o={title:"scrcpy",updated:new Date("2021-01-11T10:30:49.000Z"),created:new Date("2021-01-19T01:48:47.000Z")},t=void 0,a={},d=[{value:"Run",id:"run",level:2},{value:"Features",id:"features",level:2},{value:"Capture configuration",id:"capture-configuration",level:3},{value:"Reduce size",id:"reduce-size",level:4},{value:"Change bit-rate",id:"change-bit-rate",level:4},{value:"Limit frame rate",id:"limit-frame-rate",level:4},{value:"Crop",id:"crop",level:4},{value:"Lock video orientation",id:"lock-video-orientation",level:4},{value:"Recording",id:"recording",level:3},{value:"Connection",id:"connection",level:3},{value:"Wireless",id:"wireless",level:4},{value:"Multi-devices",id:"multi-devices",level:4},{value:"Autostart on device connection",id:"autostart-on-device-connection",level:4},{value:"SSH tunnel",id:"ssh-tunnel",level:4}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"scrcpy"}),"\n",(0,c.jsx)(n.p,{children:"This application provides display and control of Android devices connected on USB (or over TCP/IP). It does not require any root access. It works on GNU/Linux, Windows and macOS."}),"\n",(0,c.jsx)(n.h2,{id:"run",children:"Run"}),"\n",(0,c.jsx)(n.p,{children:"Plug an Android device, and execute:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy\n"})}),"\n",(0,c.jsx)(n.p,{children:"It accepts command-line arguments, listed by:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --help\n"})}),"\n",(0,c.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,c.jsx)(n.h3,{id:"capture-configuration",children:"Capture configuration"}),"\n",(0,c.jsx)(n.h4,{id:"reduce-size",children:"Reduce size"}),"\n",(0,c.jsx)(n.p,{children:"Sometimes, it is useful to mirror an Android device at a lower definition to\nincrease performance."}),"\n",(0,c.jsx)(n.p,{children:"To limit both the width and height to some value (e.g. 1024):"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --max-size 1024\nscrcpy -m 1024  # short version\n"})}),"\n",(0,c.jsx)(n.p,{children:"The other dimension is computed to that the device aspect ratio is preserved.\nThat way, a device in 1920\xd71080 will be mirrored at 1024\xd7576."}),"\n",(0,c.jsx)(n.h4,{id:"change-bit-rate",children:"Change bit-rate"}),"\n",(0,c.jsx)(n.p,{children:"The default bit-rate is 8 Mbps. To change the video bitrate (e.g. to 2 Mbps):"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --bit-rate 2M\nscrcpy -b 2M  # short version\n"})}),"\n",(0,c.jsx)(n.h4,{id:"limit-frame-rate",children:"Limit frame rate"}),"\n",(0,c.jsx)(n.p,{children:"The capture frame rate can be limited:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --max-fps 15\n"})}),"\n",(0,c.jsx)(n.p,{children:"This is officially supported since Android 10, but may work on earlier versions."}),"\n",(0,c.jsx)(n.h4,{id:"crop",children:"Crop"}),"\n",(0,c.jsx)(n.p,{children:"The device screen may be cropped to mirror only part of the screen."}),"\n",(0,c.jsx)(n.p,{children:"This is useful for example to mirror only one eye of the Oculus Go:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --crop 1224:1440:0:0   # 1224x1440 at offset (0,0)\n"})}),"\n",(0,c.jsxs)(n.p,{children:["If ",(0,c.jsx)(n.code,{children:"--max-size"})," is also specified, resizing is applied after cropping."]}),"\n",(0,c.jsx)(n.h4,{id:"lock-video-orientation",children:"Lock video orientation"}),"\n",(0,c.jsx)(n.p,{children:"To lock the orientation of the mirroring:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --lock-video-orientation 0   # natural orientation\nscrcpy --lock-video-orientation 1   # 90\xb0 counterclockwise\nscrcpy --lock-video-orientation 2   # 180\xb0\nscrcpy --lock-video-orientation 3   # 90\xb0 clockwise\n"})}),"\n",(0,c.jsx)(n.p,{children:"This affects recording orientation."}),"\n",(0,c.jsx)(n.h3,{id:"recording",children:"Recording"}),"\n",(0,c.jsx)(n.p,{children:"It is possible to record the screen while mirroring:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --record file.mp4\nscrcpy -r file.mkv\n"})}),"\n",(0,c.jsx)(n.p,{children:"To disable mirroring while recording:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --no-display --record file.mp4\nscrcpy -Nr file.mkv\n# interrupt recording with Ctrl+C\n"})}),"\n",(0,c.jsxs)(n.p,{children:['"Skipped frames" are recorded, even if they are not displayed in real time (for\nperformance reasons). Frames are ',(0,c.jsx)(n.em,{children:"timestamped"})," on the device, so ",(0,c.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Packet_delay_variation",children:"packet delay\nvariation"})," does not impact the recorded file."]}),"\n",(0,c.jsx)(n.h3,{id:"connection",children:"Connection"}),"\n",(0,c.jsx)(n.h4,{id:"wireless",children:"Wireless"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.em,{children:"Scrcpy"})," uses ",(0,c.jsx)(n.code,{children:"adb"})," to communicate with the device, and ",(0,c.jsx)(n.code,{children:"adb"})," can ",(0,c.jsx)(n.a,{href:"https://developer.android.com/studio/command-line/adb.html#wireless",children:"connect"})," to a\ndevice over TCP/IP:"]}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsx)(n.li,{children:"Connect the device to the same Wi-Fi as your computer."}),"\n",(0,c.jsx)(n.li,{children:"Get your device IP address (in Settings \u2192 About phone \u2192 Status)."}),"\n",(0,c.jsxs)(n.li,{children:["Enable adb over TCP/IP on your device: ",(0,c.jsx)(n.code,{children:"adb tcpip 5555"}),"."]}),"\n",(0,c.jsx)(n.li,{children:"Unplug your device."}),"\n",(0,c.jsxs)(n.li,{children:["Connect to your device: ",(0,c.jsx)(n.code,{children:"adb connect DEVICE_IP:5555"})," ",(0,c.jsxs)(n.em,{children:["(replace ",(0,c.jsx)(n.code,{children:"DEVICE_IP"}),")"]}),"."]}),"\n",(0,c.jsxs)(n.li,{children:["Run ",(0,c.jsx)(n.code,{children:"scrcpy"})," as usual."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"It may be useful to decrease the bit-rate and the definition:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --bit-rate 2M --max-size 800\nscrcpy -b2M -m800  # short version\n"})}),"\n",(0,c.jsx)(n.h4,{id:"multi-devices",children:"Multi-devices"}),"\n",(0,c.jsxs)(n.p,{children:["If several devices are listed in ",(0,c.jsx)(n.code,{children:"adb devices"}),", you must specify the ",(0,c.jsx)(n.em,{children:"serial"}),":"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --serial 0123456789abcdef\nscrcpy -s 0123456789abcdef  # short version\n"})}),"\n",(0,c.jsx)(n.p,{children:"If the device is connected over TCP/IP:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --serial 192.168.0.1:5555\nscrcpy -s 192.168.0.1:5555  # short version\n"})}),"\n",(0,c.jsxs)(n.p,{children:["You can start several instances of ",(0,c.jsx)(n.em,{children:"scrcpy"})," for several devices."]}),"\n",(0,c.jsx)(n.h4,{id:"autostart-on-device-connection",children:"Autostart on device connection"}),"\n",(0,c.jsxs)(n.p,{children:["You could use ",(0,c.jsx)(n.a,{href:"https://github.com/rom1v/autoadb",children:"AutoAdb"}),":"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"autoadb scrcpy -s '{}'\n"})}),"\n",(0,c.jsx)(n.h4,{id:"ssh-tunnel",children:"SSH tunnel"}),"\n",(0,c.jsxs)(n.p,{children:["To connect to a remote device, it is possible to connect a local ",(0,c.jsx)(n.code,{children:"adb"})," client to\na remote ",(0,c.jsx)(n.code,{children:"adb"})," server (provided they use the same version of the ",(0,c.jsx)(n.em,{children:"adb"}),"\nprotocol):"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"adb kill-server    # kill the local adb server on 5037\nssh -CN -L5037:localhost:5037 -R27183:localhost:27183 your_remote_computer\n# keep this open\n"})}),"\n",(0,c.jsx)(n.p,{children:"From another terminal:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy\n"})}),"\n",(0,c.jsxs)(n.p,{children:["To avoid enabling remote port forwarding, you could force a forward connection\ninstead (notice the ",(0,c.jsx)(n.code,{children:"-L"})," instead of ",(0,c.jsx)(n.code,{children:"-R"}),"):"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"adb kill-server    # kill the local adb server on 5037\nssh -CN -L5037:localhost:5037 -L27183:localhost:27183 your_remote_computer\n# keep this open\n"})}),"\n",(0,c.jsx)(n.p,{children:"From another terminal:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"scrcpy --force-adb-forward\n"})}),"\n",(0,c.jsx)(n.p,{children:"Like for wireless connections, it may be useful to reduce quality:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"scrcpy -b2M -m800 --max-fps 15\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var i=r(6540);const c={},s=i.createContext(c);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);